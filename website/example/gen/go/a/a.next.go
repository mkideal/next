// Code generated by "next"; DO NOT EDIT

package a

// XX constant
// XX value 2
const XX = 1 // XX value
// Constants
const ServerName = "Comprehensive Test Server"
const Version = "1.0.0"
const MaxConnections = 1000
const Pi = 3.14159265358979323846
const MaxInt64 = 9223372036854775807 // 2^63 - 1
const MinInt64 = -9223372036854775808 // -2^63
// Constants with complex expressions
const A = 1
const B = 3
const C = 9
const D = 7
const E = 28
const F = 1052
const G = 1052
const H = 5672
const I = 5673.618 // Approximation of golden ratio
const J = 47.28015 // 120 is 5!
// Constants with function calls
const StringLength = 13
const MinValue = 1
const MaxValue = 5673
// Constants using built-in functions
const IntFromBool = 1
const IntFromFloat = 3
const FloatFromInt = 42.0
const FloatFromBool = 0.0
const BoolFromInt = true
const BoolFromString = true
const FormattedString1 = "The answer is 42"
const FormattedString2 = "Pi is approximately 3.14"
const FormattedString3 = "Hello World\n"
// Constants for testing complex expressions and bitwise operations
const Complex1 = 5673
const Complex2 = 78547
const Complex3 = 31
const Complex4 = 31
const Complex5 = 31

// Enum with iota
type Color int32

const (
	ColorRed Color = 1
	ColorGreen Color = 2
	ColorBlue Color = 4
	ColorAlpha Color = 8
	ColorYellow Color = 3
	ColorCyan Color = 6
	ColorMagenta Color = 5
	ColorWhite Color = 7
)

// Enum with complex iota usage
type FilePermission int32

const (
	FilePermissionNone FilePermission = 0
	FilePermissionExecute FilePermission = 1
	FilePermissionWrite FilePermission = 2
	FilePermissionRead FilePermission = 4
	FilePermissionUserRead FilePermission = 4
	FilePermissionUserWrite FilePermission = 32
	FilePermissionUserExecute FilePermission = 256
	FilePermissionGroupRead FilePermission = 2048
	FilePermissionGroupWrite FilePermission = 16384
	FilePermissionGroupExecute FilePermission = 131072
	FilePermissionOthersRead FilePermission = 1048576
	FilePermissionOthersWrite FilePermission = 8388608
	FilePermissionOthersExecute FilePermission = 67108864
	// 4|32|256|2048|16384|131072|1048576|8388608|67108864
	// 4 + 32 + 256 + 2048 + 16384 + 131072 + 1048576 + 8388608 + 67108864
	FilePermissionAll FilePermission = 76695844
)

type Day int32

const (
	DayMonday Day = 1
	DayTuesday Day = 2
	DayWednesday Day = 4
	DayThursday Day = 8
	DayFriday Day = 16
	DaySaturday Day = 32
	DaySunday Day = 64
	DayWeekday Day = 31
	DayWeekend Day = 96
)

type Month int32

const (
	MonthJanuary Month = 1
	MonthFebruary Month = 2
	MonthMarch Month = 4
	MonthApril Month = 8
	MonthMay Month = 16
	MonthJune Month = 32
	MonthJuly Month = 64
	MonthAugust Month = 128
	MonthSeptember Month = 256
	MonthOctober Month = 512
	MonthNovember Month = 1024
	MonthDecember Month = 2048
	MonthQ1 Month = 7
	MonthQ2 Month = 56
	MonthQ3 Month = 448
	MonthQ4 Month = 3584
)

// Test cases for iota
type IotatestEnum int32

const (
	IotatestEnumA IotatestEnum = 0 // 0
	IotatestEnumB IotatestEnum = 1 // 1
	IotatestEnumC IotatestEnum = 0 // 0
	IotatestEnumD IotatestEnum = 2 // 2
	IotatestEnumE IotatestEnum = 0 // 0
	IotatestEnumF IotatestEnum = 1 // 1
	IotatestEnumG IotatestEnum = 0 // 0
)

// Struct types
type Point2D struct {
	X float64  // x-coordinate
	Y float64  // y-coordinate
}

type Point3D struct {
	Point Point2D 
	Z float64 
}

type Rectangle struct {
	TopLeft Point2D 
	BottomRight Point2D 
}

// Struct with various field types
type ComplexStruct struct {
	Flag bool 
	TinyInt int8 
	SmallInt int16 
	MediumInt int32 
	BigInt int64 
	DefaultInt int 
	SinglePrecision float32 
	DoublePrecision float64 
	Text string 
	SingleByte byte 
	ByteArray []byte 
	FixedArray [5]int 
	DynamicArray []string 
	IntArray []int 
	Dictionary map[string]int 
}

type User struct {
	Id int64 
	Username string 
	Email string 
	PreferredDay Day 
	BirthMonth Month 
}

type UserProfile struct {
	User User 
	FirstName string 
	LastName string 
	Age int 
	Interests []string 
}

// message types
type LoginRequest struct {
	Username string 
	Password string 
	DeviceId string 
	TwoFactorToken string 
}

func (LoginRequest) MessageType() int { return 201 }

type LoginResponse struct {
	Success bool 
	ErrorMessage string 
	AuthenticationToken string 
	User User 
}

func (LoginResponse) MessageType() int { return 202 }

type GenericRequest struct {
	RequestId string 
	Timestamp int64 
}

type GenericResponse struct {
	RequestId string 
	Timestamp int64 
	Success bool 
	ErrorCode string 
	ErrorMessage string 
}
